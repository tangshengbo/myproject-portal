<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
    http://www.springframework.org/schema/redis
    http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">

    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="30"/>
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="10"/>
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024"/>
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000"/>
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="1500"/>
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="true"/>
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true"/>
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="host" value="localhost"/>
        <constructor-arg name="port" value="6379"/>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
    </bean>


    <!-- 集群环境的配置,任选其一 -->
    <!--<bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">-->
    <!--<constructor-arg name="nodes">-->
    <!--<set>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7001"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7002"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7003"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7004"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7005"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7006"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7007"></constructor-arg>-->
    <!--</bean>-->
    <!--<bean class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg index="0" value="192.168.25.153"></constructor-arg>-->
    <!--<constructor-arg index="1" value="7008"></constructor-arg>-->
    <!--</bean>-->
    <!--</set>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>-->
    <!--</bean>-->

    <!-- redis客户端实现类 -->
    <!-- 单机版 -->
    <bean id="jedisClient" class="com.tangshengbo.cache.JedisClientPool"/>
    <!-- 集群版 -->
    <!--<bean id="jedisClient" class="com.taotao.rest.dao.impl.JedisClientCluster"/>-->

    <!-- spring data redis -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="localhost"/>
        <property name="port" value="6379"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate"/>
        <property name="defaultExpiration" value="100"/>
        <property name="expires">
            <map>
               <entry key="MyCache" value="100"/>
            </map>
        </property>
        <property name="cacheNames">
            <list>
              <value>MyCache</value>
            </list>
        </property>
    </bean>

    <bean id="rejectedPolicy" class="java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy"/>
    <bean id="redisMessageListener" class="com.tangshengbo.service.component.RedisMessageListener"/>
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数 -->
        <property name="corePoolSize" value="10"/>
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="20"/>
        <!-- 队列最大长度 -->
        <property name="queueCapacity" value="10"/>
        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
        <property name="keepAliveSeconds" value="60"/>
        <!-- 拒绝策略 -->
        <property name="rejectedExecutionHandler" ref="rejectedPolicy"/>
    </bean>

    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="taskExecutor" ref="taskExecutor"/>
        <property name="messageListeners">
            <map>
                <entry key-ref="redisMessageListener">
                    <list>
                        <!-- 普通订阅，订阅具体的频道 -->
                        <bean class="org.springframework.data.redis.listener.ChannelTopic">
                            <constructor-arg value="topic.channel"/>
                        </bean>
                        <!--&lt;!&ndash; 模式订阅，支持模式匹配订阅，*为模糊匹配符 &ndash;&gt;-->
                        <!--<bean class="org.springframework.data.redis.listener.PatternTopic">-->
                        <!--<constructor-arg value="topic.*" />-->
                        <!--</bean>-->
                        <!--&lt;!&ndash; 匹配所有频道 &ndash;&gt;-->
                        <!--<bean class="org.springframework.data.redis.listener.PatternTopic">-->
                        <!--<constructor-arg value="*" />-->
                        <!--</bean>-->
                    </list>
                </entry>
            </map>
        </property>
    </bean>

</beans>